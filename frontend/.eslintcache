[{"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\product\\ProductDetailPage.js":"1","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\modals\\RatingModals.js":"2","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\home\\HomePage.js":"3","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ArrivalProduct.js":"4","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\BestSeller.js":"5","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ProductCard.js":"6","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\RalatedProduct.js":"7","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ProductListItem.js":"8","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\SingleProduct.js":"9","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\App.js":"10","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\sub\\CreateSubPage.js":"11","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\user\\PasswordPage.js":"12","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\ForgotPasswordPage.js":"13","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\product\\ProductListPage.js":"14","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\nav\\Header.js":"15","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Search.js":"16","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Card.js":"17","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\category\\CategoryList.js":"18","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\asyncActionCreator.js":"19","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\firebase\\firebase.js":"20","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\user\\HistoryPage.js":"21","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\category\\UpdateCategory.js":"22","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Loader.js":"23","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\FileUploadInput.js":"24","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\reducer.js":"25","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\index.js":"26","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\sub\\UpdateSubPage.js":"27","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\category\\CreateCategoryPage.js":"28","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\actionCreator.js":"29","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\user\\WishlistPage.js":"30","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\DashboardPage.js":"31","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\RegisterCompletePage.js":"32","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Jumbotron.js":"33","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\category\\CategoryHome.js":"34","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\actionType.js":"35","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\actionCreator.js":"36","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\RegisterPage.js":"37","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\LoginPage.js":"38","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\product\\CreateProductPage.js":"39","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\product\\UpdateProductPage.js":"40","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\actionCreator.js":"41","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\nav\\AdminSidebar.js":"42","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\actionType.js":"43","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\asyncActionCreator.js":"44","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\reducer.js":"45","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\rootReducer.js":"46","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\sub\\SubList.js":"47","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\sub\\SubHome.js":"48","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\store.js":"49","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\actionCreator.js":"50","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\SearchBox.js":"51","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\asyncActionCreator.js":"52","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\reducer.js":"53","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\actionType.js":"54","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Rating.js":"55","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\FormContainer.js":"56","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\shop\\ShopPage.js":"57","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\asyncActionCreator.js":"58","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\actionType.js":"59","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Star.js":"60","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Route\\AdminRoute.js":"61","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\asyncActionCreator.js":"62","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\actionType.js":"63","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\actionType.js":"64","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\reducer.js":"65","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\actionCreator.js":"66","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\nav\\SidebarNav.js":"67","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\actionCreator.js":"68","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\cart\\CartPage.js":"69","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\UserRedirect.js":"70","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ProductList.js":"71","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\reducer.js":"72","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\reducer.js":"73","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\drawer\\reducer.js":"74","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\drawer\\Drawer.js":"75","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\drawer\\actionType.js":"76","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Route\\UserRoute.js":"77","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\checkout\\CheckOutPage.js":"78","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\reducer.js":"79","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\actionType.js":"80","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\reportWebVitals.js":"81","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Message.js":"82","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\asyncCreator.js":"83","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\reducer.js":"84","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\actionCreator.js":"85","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\asyncActionCreator.js":"86","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\actionType.js":"87","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\coupon\\CouponPage.js":"88","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\payment\\Payment.js":"89","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\StripeCheckout.js":"90","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\payment\\payment.js":"91","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\asyncActionCreator.js":"92","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\actionCreator.js":"93","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Invoice.js":"94","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\wishlist\\actionCreator.js":"95","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\wishlist\\actionType.js":"96","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\wishlist\\reducer.js":"97","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\Password.js":"98"},{"size":3017,"mtime":1609002065420,"results":"99","hashOfConfig":"100"},{"size":1954,"mtime":1608986514270,"results":"101","hashOfConfig":"100"},{"size":752,"mtime":1609749052564,"results":"102","hashOfConfig":"100"},{"size":2053,"mtime":1609743130087,"results":"103","hashOfConfig":"100"},{"size":2145,"mtime":1609002052710,"results":"104","hashOfConfig":"100"},{"size":2666,"mtime":1609769796888,"results":"105","hashOfConfig":"100"},{"size":1141,"mtime":1609002065420,"results":"106","hashOfConfig":"100"},{"size":3042,"mtime":1609769692683,"results":"107","hashOfConfig":"100"},{"size":4834,"mtime":1609790264904,"results":"108","hashOfConfig":"100"},{"size":5135,"mtime":1609839413509,"results":"109","hashOfConfig":"100"},{"size":5781,"mtime":1608634798738,"results":"110","hashOfConfig":"100"},{"size":2746,"mtime":1608572452283,"results":"111","hashOfConfig":"100"},{"size":1873,"mtime":1609789074062,"results":"112","hashOfConfig":"100"},{"size":2865,"mtime":1609839588656,"results":"113","hashOfConfig":"100"},{"size":3479,"mtime":1609769415924,"results":"114","hashOfConfig":"100"},{"size":297,"mtime":1608614977922,"results":"115","hashOfConfig":"100"},{"size":1115,"mtime":1608987403324,"results":"116","hashOfConfig":"100"},{"size":1585,"mtime":1609769660428,"results":"117","hashOfConfig":"100"},{"size":3624,"mtime":1609007664670,"results":"118","hashOfConfig":"100"},{"size":753,"mtime":1608532694154,"results":"119","hashOfConfig":"100"},{"size":6157,"mtime":1609687303803,"results":"120","hashOfConfig":"100"},{"size":2553,"mtime":1608615582391,"results":"121","hashOfConfig":"100"},{"size":771,"mtime":1609790290045,"results":"122","hashOfConfig":"100"},{"size":1780,"mtime":1609769886627,"results":"123","hashOfConfig":"100"},{"size":4618,"mtime":1609007071586,"results":"124","hashOfConfig":"100"},{"size":748,"mtime":1609790275420,"results":"125","hashOfConfig":"100"},{"size":3908,"mtime":1608626853434,"results":"126","hashOfConfig":"100"},{"size":4366,"mtime":1608634824365,"results":"127","hashOfConfig":"100"},{"size":3492,"mtime":1609012782513,"results":"128","hashOfConfig":"100"},{"size":2425,"mtime":1609781827063,"results":"129","hashOfConfig":"100"},{"size":6550,"mtime":1609687000966,"results":"130","hashOfConfig":"100"},{"size":2464,"mtime":1608478205875,"results":"131","hashOfConfig":"100"},{"size":306,"mtime":1609769906954,"results":"132","hashOfConfig":"100"},{"size":1507,"mtime":1609011667657,"results":"133","hashOfConfig":"100"},{"size":895,"mtime":1609006439662,"results":"134","hashOfConfig":"100"},{"size":1755,"mtime":1609007376523,"results":"135","hashOfConfig":"100"},{"size":1558,"mtime":1608478264111,"results":"136","hashOfConfig":"100"},{"size":4581,"mtime":1609789022520,"results":"137","hashOfConfig":"100"},{"size":10960,"mtime":1608744623827,"results":"138","hashOfConfig":"100"},{"size":12761,"mtime":1608789779483,"results":"139","hashOfConfig":"100"},{"size":1673,"mtime":1609514385632,"results":"140","hashOfConfig":"100"},{"size":2190,"mtime":1609839175469,"results":"141","hashOfConfig":"100"},{"size":1924,"mtime":1609012669021,"results":"142","hashOfConfig":"100"},{"size":6406,"mtime":1609014638205,"results":"143","hashOfConfig":"100"},{"size":8114,"mtime":1609093168555,"results":"144","hashOfConfig":"100"},{"size":2520,"mtime":1609778950600,"results":"145","hashOfConfig":"100"},{"size":1542,"mtime":1609013249321,"results":"146","hashOfConfig":"100"},{"size":1521,"mtime":1609014704176,"results":"147","hashOfConfig":"100"},{"size":399,"mtime":1608402092401,"results":"148","hashOfConfig":"100"},{"size":1204,"mtime":1608618610438,"results":"149","hashOfConfig":"100"},{"size":1091,"mtime":1609314977415,"results":"150","hashOfConfig":"100"},{"size":3016,"mtime":1609516205695,"results":"151","hashOfConfig":"100"},{"size":1154,"mtime":1609091879825,"results":"152","hashOfConfig":"100"},{"size":232,"mtime":1609083367638,"results":"153","hashOfConfig":"100"},{"size":641,"mtime":1609222082291,"results":"154","hashOfConfig":"100"},{"size":356,"mtime":1608475289118,"results":"155","hashOfConfig":"100"},{"size":10990,"mtime":1609839731241,"results":"156","hashOfConfig":"100"},{"size":745,"mtime":1609091597155,"results":"157","hashOfConfig":"100"},{"size":703,"mtime":1608632077885,"results":"158","hashOfConfig":"100"},{"size":456,"mtime":1609220827315,"results":"159","hashOfConfig":"100"},{"size":473,"mtime":1608558960277,"results":"160","hashOfConfig":"100"},{"size":3889,"mtime":1608655394178,"results":"161","hashOfConfig":"100"},{"size":892,"mtime":1609514229529,"results":"162","hashOfConfig":"100"},{"size":514,"mtime":1609689998321,"results":"163","hashOfConfig":"100"},{"size":3129,"mtime":1609745147168,"results":"164","hashOfConfig":"100"},{"size":1092,"mtime":1609690633178,"results":"165","hashOfConfig":"100"},{"size":953,"mtime":1608556553236,"results":"166","hashOfConfig":"100"},{"size":478,"mtime":1609083743151,"results":"167","hashOfConfig":"100"},{"size":7307,"mtime":1609768718307,"results":"168","hashOfConfig":"100"},{"size":706,"mtime":1608553758612,"results":"169","hashOfConfig":"100"},{"size":4684,"mtime":1609765204036,"results":"170","hashOfConfig":"100"},{"size":5531,"mtime":1609514484199,"results":"171","hashOfConfig":"100"},{"size":4197,"mtime":1608632113726,"results":"172","hashOfConfig":"100"},{"size":338,"mtime":1609401453905,"results":"173","hashOfConfig":"100"},{"size":2468,"mtime":1609756078031,"results":"174","hashOfConfig":"100"},{"size":141,"mtime":1609398517067,"results":"175","hashOfConfig":"100"},{"size":507,"mtime":1608553654217,"results":"176","hashOfConfig":"100"},{"size":9142,"mtime":1609839756093,"results":"177","hashOfConfig":"100"},{"size":4468,"mtime":1609666964546,"results":"178","hashOfConfig":"100"},{"size":821,"mtime":1609666702053,"results":"179","hashOfConfig":"100"},{"size":362,"mtime":1607439890726,"results":"180","hashOfConfig":"100"},{"size":381,"mtime":1609761373375,"results":"181","hashOfConfig":"100"},{"size":1852,"mtime":1609759675331,"results":"182","hashOfConfig":"100"},{"size":3526,"mtime":1609587594051,"results":"183","hashOfConfig":"100"},{"size":1358,"mtime":1609584241582,"results":"184","hashOfConfig":"100"},{"size":2945,"mtime":1609691649796,"results":"185","hashOfConfig":"100"},{"size":660,"mtime":1609584172523,"results":"186","hashOfConfig":"100"},{"size":5556,"mtime":1609790185830,"results":"187","hashOfConfig":"100"},{"size":2921,"mtime":1609775762474,"results":"188","hashOfConfig":"100"},{"size":3725,"mtime":1609839692823,"results":"189","hashOfConfig":"100"},{"size":2163,"mtime":1609788147136,"results":"190","hashOfConfig":"100"},{"size":3254,"mtime":1609681590642,"results":"191","hashOfConfig":"100"},{"size":1666,"mtime":1609666736514,"results":"192","hashOfConfig":"100"},{"size":3326,"mtime":1609683287244,"results":"193","hashOfConfig":"100"},{"size":2415,"mtime":1609781562734,"results":"194","hashOfConfig":"100"},{"size":519,"mtime":1609776784169,"results":"195","hashOfConfig":"100"},{"size":2639,"mtime":1609781468597,"results":"196","hashOfConfig":"100"},{"size":2758,"mtime":1609839273043,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},"1b4tir1",{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"210"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"227"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"210"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"227"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"210"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"308"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"227"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"201"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"330"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"210"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\product\\ProductDetailPage.js",["431"],"import React , { useEffect, useRef, useState } from 'react';\r\nimport { singleProduct } from '../../redux/product/asyncActionCreator';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport SingleProduct from '../../components/product/SingleProduct';\r\nimport Axios from 'axios';\r\nimport { productReset } from '../../redux/product/actionCreator';\r\nimport RelatedProduct from '../../components/product/RalatedProduct';\r\nconst ProductDetail = ({ match }) => {\r\n    \r\n    const productDetailReducer = useSelector(state => state.productDetailReducer)\r\n    const userReducer = useSelector(state => state.userReducer)\r\n    const { product, isProductLoading, errorMessage } = productDetailReducer;\r\n    const [ star, setStar ] = useState(0);\r\n    const ref = useRef(star)\r\n    const dispatch = useDispatch();\r\n    const { currentUser } = userReducer;\r\n    const { slug } = match.params\r\n    const [ relatedProduct , setRelatedProduct ] = useState([]);\r\n    const [ relatedLoader , setRelatedLoader ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(singleProduct(slug))\r\n        dispatch(productReset())\r\n    }, [ slug ,dispatch, ])\r\n    \r\n     useEffect(() => {\r\n         if(product.ratings && currentUser) {\r\n            const rating = product.ratings.find(ex => ex.postedBy.toString() === currentUser._id.toString());\r\n            rating && setStar(rating.star)\r\n         }\r\n     },[currentUser, star])\r\n\r\n     const  productId = Object.keys(product).length > 0 ? product._id : '';\r\n     useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/v1/product/related/${productId}`).then(data => {\r\n                setRelatedLoader(false)   \r\n                setRelatedProduct(data.data.data);\r\n               \r\n            }).catch(err => {\r\n                setRelatedProduct(false);\r\n                console.log(err)\r\n            })\r\n     },[productId])\r\n    const onStarClick = (newRating, name) => {\r\n        setStar(newRating);\r\n        ref.current = newRating\r\n        Axios.patch(`http://localhost:8000/api/v1/product/rating/${name}`, { star: ref.current }, {\r\n            headers: {\r\n                authtoken: currentUser.authtoken\r\n            }\r\n        }).then(res => {\r\n            \r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n      };\r\n\r\n    return isProductLoading ? <Loader /> : errorMessage ? <Message text={errorMessage} /> :\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row p-4\">\r\n                <SingleProduct product={product} onChange={onStarClick} star={star}/>\r\n            </div>\r\n            <div className=\"row p-4\">\r\n                <div className=\"col-12\">\r\n                    \r\n                    {\r\n                        relatedLoader ? <Loader /> : <RelatedProduct product={relatedProduct} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default ProductDetail;\r\n",["432","433"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\modals\\RatingModals.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\home\\HomePage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ArrivalProduct.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\BestSeller.js",[],["434","435"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ProductCard.js",["436","437"],"import React, { useState , useEffect} from 'react';\r\nimport { Card, Tooltip } from 'antd';\r\nimport { EyeOutlined , ShoppingCartOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { addProductToCart  } from '../../redux/cart/asyncCreator';\r\nimport { useDispatch,  useSelector } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { setVisible } from '../../redux/drawer/actionType';\r\n\r\nconst { Meta } = Card\r\nconst ProductCard = ({ product }) => {\r\n\r\n    const { title , description, images, slug , price} = product;\r\n    const [ tooltip, setTooltip ] = useState('Click to add');\r\n    const userReducer = useSelector(state => state.userReducer);\r\n    const { currentUser } = userReducer\r\n    \r\n    const dispatch = useDispatch();\r\n    const handleAddToClick = () => {\r\n        let cart = []\r\n        if(typeof window !== 'undefined'){\r\n            if(localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'));\r\n            }\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            let unique = _.uniqWith(cart, _.isEqual);\r\n            if(currentUser) {\r\n                dispatch(addProductToCart(currentUser.authtoken,unique))\r\n            }    \r\n            localStorage.setItem('cart',JSON.stringify(unique))\r\n            setTooltip('Added')\r\n            dispatch(setVisible());\r\n        }\r\n    }\r\n    return (\r\n        <Card  hoverable \r\n                className=\"w-100 border image-fluid   p-2\"\r\n                actions={[\r\n                   <Link to={`/product/${slug}`}>\r\n                        <EyeOutlined className=\"text-cyan\" /> \r\n                        <br />\r\n                        View Detail \r\n                   </Link>, \r\n                   <Tooltip title={tooltip}>    \r\n                    <a onClick={handleAddToClick}>\r\n                            <ShoppingCartOutlined   \r\n                            className=\"text-warning\"  /> \r\n                            <br />\r\n                            Add to cart\r\n                    </a>\r\n                   </Tooltip>\r\n                ]}\r\n                cover={<img alt=\"example\"  src={ images && images.length ? images[0].url : ''}  />}\r\n                style={{  width: 200,  objectFit: 'cover'}}>\r\n                    <Meta title={<span><span className=\"float-left\">{title.toUpperCase()}</span> <span className=\"float-right\">Rs. {price}</span></span> }\r\n                        \r\n                    description={`${description.substring(0,75)}...`}\r\n                    />\r\n                    \r\n            </Card>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\RalatedProduct.js",[],["438","439"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ProductListItem.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\SingleProduct.js",["440","441","442"],"import React, {useState, useEffect} from 'react';\r\nimport {  useHistory } from 'react-router-dom';\r\nimport { Card , Tabs, Tooltip} from 'antd';\r\nimport { HeartOutlined , ShoppingCartOutlined} from '@ant-design/icons';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport ProductListItem from './ProductListItem';\r\nimport StarRating from 'react-star-ratings';\r\nimport RatingModals from '../modals/RatingModals';\r\nimport Rating from '../Rating';\r\nimport _ from 'lodash';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCartSuccess } from '../../redux/cart/actionCreator';\r\nimport { setVisible } from '../../redux/drawer/actionType';\r\nimport DefaultImage from '../../images/laptop.png';\r\nimport { addToWishlist } from '../../redux/wishlist/actionCreator';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \r\n\r\nconst {TabPane } = Tabs\r\nconst SingleProduct = ({ product, onChange, star}) => {\r\n    const {  title, images, description, _id} = product\r\n    const [ tooltip, setTooltip ] = useState('Click to add');\r\n    const userReducer = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const history =  useHistory()\r\n    const { currentUser } = userReducer;\r\n\r\n\r\n    const handleAddToClick = () => {\r\n   \r\n        let cart = []\r\n        if(typeof window !== 'undefined'){\r\n            if(localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'));\r\n            }\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            let unique = _.uniqWith(cart, _.isEqual);\r\n\r\n            \r\n            localStorage.setItem('cart',JSON.stringify(unique))\r\n            dispatch(addToCartSuccess(unique))\r\n            setTooltip('Added')\r\n            dispatch(setVisible());\r\n        }\r\n    }\r\n    const wishListHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addToWishlist(currentUser.authtoken, product._id))\r\n\r\n        history.push('/user/wishlist')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"col-md-7\">\r\n                {\r\n                    images && images.length ?<Carousel autoPlay infiniteLoop showArrows={true}  >\r\n                    {\r\n                        images ? images.map((i) => <img className=\"rounded border\" key={i.public_id} src={i.url}  alt={title}/>) : <DefaultImage />\r\n                    }\r\n                </Carousel> : <Card cover={<img   src={DefaultImage}  alt=\"example\" />}\r\n                                style={{  width: 200,  objectFit: 'cover'}}\r\n                 ></Card>\r\n                }\r\n                <Tabs type=\"card\">\r\n                    <TabPane tab=\"Decription\" key=\"1\">\r\n                        { description && description }\r\n                    </TabPane>\r\n                    <TabPane tab=\"More Info\" key=\"2\">\r\n                         Call us on XXX-XXXX-XXX for more information.\r\n                    </TabPane>\r\n                    \r\n                </Tabs>\r\n            </div>   \r\n            <div className=\"col-md-5\">\r\n                <h2 className=\"bg-light text-secondary display-4 p-3  rounded text-uppercase\">{title}</h2>\r\n                <div className=\"text-center mb-2\">\r\n                   {\r\n                       product && product.ratings &&  product.ratings.length > 0 ? <Rating product={product} /> :\r\n                        <span className=\"text-secondary text-uppercase\">No review yet</span>\r\n                   }\r\n                </div>\r\n            <Card  \r\n                actions={[\r\n                    <a  onClick={wishListHandler} className=\"text-secondary text-uppercase\">\r\n                         <HeartOutlined className=\"text-info\" /> \r\n                        <br/> \r\n                         Add to wishlist   \r\n                    </a>, \r\n                    <Tooltip title={tooltip}>    \r\n                        <a onClick={handleAddToClick}>\r\n                                <ShoppingCartOutlined   \r\n                                className=\"text-warning\"  /> \r\n                                <br />\r\n                                Add to cart\r\n                        </a>\r\n                   </Tooltip>,\r\n                     <RatingModals>\r\n                     <StarRating  \r\n                         name={_id}\r\n                         starRatedColor=\"#5cb85c\"\r\n                         starDimension=\"25px\"\r\n                         starHoverColor=\"#5cb85c\"\r\n                         rating={star}\r\n                         changeRating={onChange}\r\n                         isSelectable={true}\r\n                     />\r\n                 </RatingModals>\r\n                ]}>\r\n                 <ProductListItem  product={product} />   \r\n            </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleProduct\r\n",["443","444"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\App.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\sub\\CreateSubPage.js",[],["445","446"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\user\\PasswordPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\ForgotPasswordPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\product\\ProductListPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\nav\\Header.js",["447"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Search.js",[],["448","449"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Card.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\category\\CategoryList.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\asyncActionCreator.js",[],["450","451"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\firebase\\firebase.js",[],["452","453"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\user\\HistoryPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\category\\UpdateCategory.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\FileUploadInput.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\reducer.js",[],["454","455"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\index.js",[],["456","457"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\sub\\UpdateSubPage.js",["458","459"],"import React , { useState, useEffect  }from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AdminSidebarNav from '../../../components/nav/AdminSidebar';\r\nimport Loader from '../../../components/Loader';\r\nimport {  subUpdate, singleSub  } from '../../../redux/sub/asyncActionCreator';\r\nimport { allCategory } from '../../../redux/category/asyncActionCreator';\r\nimport Message from '../../../components/Message';\r\n\r\nconst UpdateSubPage = ({ match, history  }) => {\r\n\r\n    const [category, setCategory ] = useState('');\r\n    const  [name ,setName] = useState('');\r\n    const subReducer = useSelector(state => state.subReducer)\r\n    \r\n    const categoryReducer = useSelector(state => state.categoryReducer)\r\n    const subUpdateReducer = useSelector(state => state.subUpdateReducer)\r\n   \r\n    const { categories } = categoryReducer;\r\n    const { sub, isLoading, errorMessage }  = subReducer\r\n    const  userReducer = useSelector(state => state.userReducer);\r\n\r\n    const dispatch = useDispatch();\r\n    const slug  = match.params.slug;\r\n    \r\n    const { currentUser } = userReducer;\r\n    const {  isLoading: loading  } = subUpdateReducer;\r\n    \r\n    useEffect(() => {\r\n        if(currentUser.role === 'admin') {\r\n            dispatch(allCategory());\r\n            dispatch(singleSub(slug));\r\n            setName(slug)\r\n        } \r\n    },[currentUser, slug, dispatch,])\r\n\r\n    const submitHandler =  (e) => {\r\n        e.preventDefault();\r\n\r\n        if(window.confirm('Are you sure ???')) {\r\n            dispatch(subUpdate(currentUser.authtoken , { name: name, parent: category }, slug))\r\n            setTimeout(() => {\r\n                history.push('/admin/add-sub-category')\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                        <AdminSidebarNav />\r\n                </div>\r\n                <div className=\"offset-md-1 col-md-6  text-secondary  mx-2 my-3\">\r\n                    <h4 className=\"text-secondary text-uppercase \"> category  update</h4>\r\n                    <hr />\r\n                    <br />\r\n                    {\r\n                        loading ? <Loader /> : (\r\n                            <form onSubmit={submitHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label\">Category</label>\r\n                                    <select value={category} onChange={e => setCategory(e.target.value)} className=\"form-control\">\r\n                                        {\r\n                                            loading ? <Loader /> : errorMessage ? <Message  text={errorMessage} />: (\r\n                                                categories.map(cat => (\r\n                                                    <option key={cat.name}  value={cat._id}>{cat.name}</option>\r\n                                                ))\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label text-uppercase\" >Sub Category</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)} autoFocus />\r\n                                </div>\r\n                                \r\n                                <button type=\"submit\" className=\"btn  btn-outline\" onClick={submitHandler}>Update</button>\r\n                            </form>\r\n                    \r\n                        )\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateSubPage;\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\category\\CreateCategoryPage.js",[],["460","461"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\user\\WishlistPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\DashboardPage.js",["462"],"import React, { useEffect, useState  } from 'react';\r\nimport AdminSidebarNav from '../../components/nav/AdminSidebar';\r\nimport { allOrder, updateOrder } from '../../redux/order/asyncActionCreator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { orderReset } from '../../redux/order/actionCreator';\r\nimport moment from 'moment';\r\nimport { CheckCircleOutlined, CloseCircleOutlined} from '@ant-design/icons';\r\nimport Loader from '../../components/Loader';\r\nconst DashboardPage = () => {\r\n\r\n    const status = [\r\n        'Not processed',\r\n        'Processing',\r\n        'Dispatched',\r\n        'Cancelled',\r\n        'Delivered'\r\n    ]\r\n\r\n    const orderReducer = useSelector(state => state.orderReducer)\r\n    const updateOrderReducer = useSelector(state => state.updateOrderReducer)\r\n    \r\n    const { success, isLoading: updateLoader} = updateOrderReducer\r\n    const userReducer = useSelector(state => state.userReducer)\r\n    \r\n    const { currentUser } = userReducer\r\n    const { isLoading , orders} = orderReducer \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(orderReset());\r\n        if(currentUser) {\r\n            dispatch(allOrder(currentUser.authtoken))\r\n        }\r\n    },[currentUser,dispatch, success])\r\n\r\n    const showOrderTable = (order) => (\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered\">\r\n                <thead className=\"table-light\">\r\n                    <tr>\r\n                        <th scope=\"col\" >Title</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Brand</th>\r\n                        <th scope=\"col\">Color</th>\r\n                        <th scope=\"col\">Count</th>\r\n                        <th scope=\"col\">Shipping</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        order.products.map((p,i) => (\r\n                            <tr key={i}>\r\n                                <td className=\"font-weight-bold\">{p.product.title}</td>\r\n                                \r\n                                <td>{p.product.price}</td>\r\n                                \r\n                                <td>{p.product.brand}</td>\r\n                                \r\n                                <td>{p.product.color}</td>\r\n                                \r\n                                <td>{p.count}</td>\r\n                                <td>{p.product.shipping === \"Yes\" ? <CheckCircleOutlined style={{color: 'green'}} /> : <CloseCircleOutlined  style={{color: 'red'}}/>}</td>\r\n                            </tr>\r\n                        ))   \r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n    const paymentInfo = (order) => (\r\n        <div>\r\n            <div className=\"row\">\r\n                <p className=\"col-md-4\">Oder Id: {order._id}</p>\r\n                <div className=\"col-md-4\">\r\n                    <span className=\"text-secondary\">Order Status:</span>\r\n                    <select value={order.orderStatus} onChange={(e) =>handleChange(order._id, e.target.value)} \r\n                    className=\"form-control px-3 bg-primary  text-light text-uppercase\" > \r\n                     {\r\n                         status.map(((st,i) => <option  key={i} className=\"m-2 bg-dark text-light\" value={st} >{st}</option> ))\r\n                    }</select>\r\n                </div>\r\n                <p className=\"col-md-4\">Order at: {moment(order.updatedAt).format('MMM Do YYYY, h:mm a')} </p>\r\n            </div>\r\n            {\r\n                order.paymentMode === 'Stripe' ? \r\n                <div className=\"row\">\r\n                    <p className=\"col-md-4\">Payment Id: {order.paymentIntent.id}</p>\r\n                    <p className=\"col-md-4\">Amount: Rs. {order.paymentIntent.amount}</p>\r\n    \r\n                    <p className=\"col-md-4\">Status: {order.paymentIntent.status === \"succeeded\" ? \r\n                    <span>Paid <CheckCircleOutlined style={{color: 'green'}}  /> </span> :\r\n             <span> Unpaid <CloseCircleOutlined style={{color: 'red'}} /> </span>}</p>\r\n                    \r\n                </div>\r\n                : \r\n                <div className=\"row\">\r\n                    <p className=\"col-md-4\">Payment Id: Null </p>\r\n                    <p className=\"col-md-4\">Amount: Rs. 0 </p>\r\n                    \r\n                    <div className=\"col-md-4\">\r\n                        <span className=\"text-secondary\">Payment status:</span>\r\n                        <select value={order.isPaid} onChange={(e) => dispatch(updateOrder(currentUser.authtoken, order._id, { isPaid: e.target.value}))} \r\n                        className=\"form-control px-3 bg-primary  text-light text-uppercase\" > \r\n                                <option value=\"Paid\" >Paid</option>\r\n                                <option value=\"Unpaid\">Unpaid</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    const handleChange = (id, orderStatus) => {\r\n        dispatch(updateOrder(currentUser.authtoken, id, { orderStatus}))\r\n    }\r\n     return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                        <AdminSidebarNav />\r\n                </div>\r\n                <div className=\"offset-md-1 col-md-7  text-secondary  mx-2 my-3\">\r\n                    <div className=\"row\">\r\n                        <h4 className=\"col text-center text-uppercase display-4\"> You have received below order</h4>\r\n                    </div>\r\n                    <hr />\r\n                    <br />\r\n                    {\r\n                        updateLoader || isLoading ? <Loader width={40} height={40} /> : orders.length > 0 ?\r\n                         orders.map(( order) => <div key={order._id} className=\"m-5 p-3 card text-uppercase text-center\">\r\n                            <div style={{cursor: 'pointer'}}>{paymentInfo(order)}</div>\r\n                            <div style={{cursor: 'pointer'}}>{showOrderTable(order)}</div>\r\n                            <div style={{cursor: 'pointer'}}>\r\n                                \r\n                            </div>\r\n                        </div>) : <p className=\"text-uppercase  text-center\"> You have not received any order yet.</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage;\r\n",["463","464"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\RegisterCompletePage.js",["465","466"],"import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport { auth } from '../../firebase/firebase';\r\nconst RegisterComplete = (props) => {\r\n    const { history } = props;\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword] = useState('');\r\n    \r\n    let userEmail = localStorage.getItem('emailForRegistration');\r\n    const userReducer = useSelector(state => state.userReducer);\r\n    const {  currentUser, } = userReducer;\r\n\r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            history.push('/')\r\n        }\r\n    },[currentUser, history]);\r\n    const submitHandler = async(e) => {\r\n\r\n        e.preventDefault();\r\n        if(password.length < 6) {\r\n            alert('Password must be equal or greater than 6.');\r\n            return;\r\n        }\r\n        try {\r\n            if(auth.isSignInWithEmailLink(window.location.href)) {\r\n                if(!userEmail) {\r\n                    userEmail = window.prompt('Please enter your email');\r\n                }\r\n                const result = auth.signInWithEmailLink(userEmail, window.location.href)\r\n                if((await result).user.emailVerified) {\r\n                    const user = auth.currentUser;\r\n                    const userToken = await (await user.getIdTokenResult()).token;\r\n                    await user.updatePassword(password)\r\n\r\n                    toast.success(`Welcome ${user.email.split('@')[0]}!`);\r\n                    \r\n                    localStorage.removeItem('emailForRegistration');\r\n                    history.push('/')\r\n\r\n                }\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h4>Complete Registration</h4>\r\n            <form onSubmit={submitHandler}>\r\n                <input type=\"email\"  className=\"form-control my-3\" placeholder=\"type your email\"  defaultValue={email} />\r\n                <input type=\"password\" className=\"form-control my-3\" placeholder=\"type your password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button type=\"submit\" className=\"btn btn-raised btn-secondary\" disabled={password.length < 6}>Complete Registration</button>\r\n            </form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterComplete\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Jumbotron.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\category\\CategoryHome.js",["467"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector  } from \"react-redux\";\r\nimport { productBelongToSpecificCategory } from '../../redux/product/asyncActionCreator';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport Card from '../product/ProductCard';\r\nconst CategoryHome = ( {match , } ) => {\r\n    const { slug } = match.params;\r\n    const productBelongToSpecificReducer = useSelector(state => state.productBelongToSpecificReducer)\r\n    const { products, isLoading, errorMessage  } = productBelongToSpecificReducer;\r\n\r\n    console.log(products)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(productBelongToSpecificCategory(slug))\r\n    },[dispatch])\r\n    return isLoading ? <Loader /> : errorMessage ? <span className=\"text-center\"><Message text={errorMessage}/></span> : <>\r\n        <h4 className=\"display-4 mt-5 mb-2 text-center  jumbotron jumbo text-secondary text-uppercase \">\r\n                Total {products.length} products found with {slug.toUpperCase()} category\r\n            </h4>\r\n        <div className=\"container\">    \r\n            <div className=\"row \">\r\n                {\r\n                    products.map(product => (\r\n                        <div className=\"col-md-4  my-2 \"  key={product._id}>\r\n                            <Card  product={product} />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div> \r\n    </>\r\n}\r\n\r\nexport default CategoryHome\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\actionType.js",[],["468","469"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\category\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\RegisterPage.js",[],["470","471"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\auth\\LoginPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\product\\CreateProductPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\product\\UpdateProductPage.js",["472","473","474","475","476"],"import React , { useState, useEffect  }from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AdminSidebarNav from '../../../components/nav/AdminSidebar';\r\nimport Loader from '../../../components/Loader';\r\nimport { allCategory } from '../../../redux/category/asyncActionCreator';\r\nimport {   getSub, } from '../../../redux/sub/asyncActionCreator';\r\nimport {  singleProduct ,productUpdate} from '../../../redux/product/asyncActionCreator';\r\n\r\nimport Message from '../../../components/Message';\r\nimport FileUploadInput from '../../../components/FileUploadInput'\r\nimport { Select, Avatar, Badge  } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nconst initialState = {\r\n    title: '',\r\n    description: '',\r\n    categories: [],\r\n    price: '',\r\n    sold: '',\r\n    quantity: '',\r\n    category: '',\r\n    sub: [],\r\n    brands: ['Apple', 'Asus', 'Dell', 'Hp', 'Lenavo', 'Mi', 'Moto','Samsung'],\r\n    colors: [ 'Black', 'Brown', 'Silver','White', 'Blue'],\r\n    rating: '',\r\n    shipping: '',\r\n    color: '',\r\n    brand: '',\r\n    images: [],\r\n}\r\n\r\n\r\nconst UpdateProductPage = ({ match, history }) => {\r\n    \r\n    const [ productInput, setProductInput ]= useState(initialState);\r\n    const { title, description, price, quantity, brands,colors, } = productInput;\r\n    const [ visibleSub, setVisibleSub ] = useState(true);\r\n    \r\n    const [ imageUploadLoading, setImageUploadLoading] = useState(false);\r\n    const userReducer = useSelector(state => state.userReducer)\r\n    const categoryReducer = useSelector(state => state.categoryReducer);\r\n    \r\n    const subReducer = useSelector(state => state.subReducer);\r\n    const { currentUser } = userReducer;\r\n    const { isLoading: categoryLoading, errorMessage: categoryErrorMessage,  categories} = categoryReducer;\r\n    const { isLoading: subLoading, errorMessage: subErrorMessage,  sub} = subReducer;\r\n    const productDetailReducer = useSelector(state => state.productDetailReducer)\r\n    \r\n    const { product, isProductLoading,   }= productDetailReducer;\r\n    \r\n    const dispatch = useDispatch();\r\n    const slug = match.params.slug;\r\n   \r\n    const changeHandler = (e) => {\r\n        const { name , value } = e.target;\r\n        setProductInput({...productInput, [name]: value});\r\n    }\r\n    \r\n    \r\n    const handleChangeForSub = (e) =>  {\r\n        e.preventDefault();\r\n        const { name , value } = e.target;\r\n        setProductInput({...productInput, [name]: value});\r\n        setVisibleSub(true)\r\n        dispatch(getSub(value));\r\n    } \r\n\r\n    let assignedSub= [];\r\n    // let assignCat = (product && categories) ? categories.find(cat => cat._id ===  productInput.category._id) : {};\r\n    console.log(assignedSub)\r\n    useEffect(()  => {\r\n        if(currentUser.role === 'admin' && (Object.keys(product).length === 0 && product.constructor === Object )) {\r\n            dispatch(singleProduct(slug));\r\n            dispatch(allCategory());\r\n        } else if(Object.keys(product).length !== 0 && product.constructor === Object){   \r\n            setProductInput({...productInput, ...product})\r\n            dispatch(getSub(product.category._id))    \r\n        } else if(sub) {\r\n            assignedSub = sub.filter( s => s._id === product.sub._id)\r\n        }\r\n    },[dispatch, currentUser, slug, Object.keys(product).length], sub, assignedSub.length);\r\n\r\n    console.log(productInput);\r\n    const submitHandler =  (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(productUpdate(currentUser.authtoken, productInput, slug))\r\n\r\n\r\n        setTimeout(() => {\r\n            history.push('/admin/product')\r\n        }, 1000);\r\n    }\r\n    const  handleImageRemove =  (id) => {\r\n        Axios.post(`http://localhost:8000/api/v1/image/delete-image`, { image : id }, {\r\n            headers: {\r\n                authtoken: currentUser.authtoken,\r\n            }\r\n        }).then(res => {\r\n            const { images } = productInput; \r\n            let filterImage = images.filter((img ) => {\r\n                return img.public_id !== id;\r\n            })\r\n            setProductInput({ ...productInput, images: filterImage})\r\n        \r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                        <AdminSidebarNav />\r\n                </div>\r\n                <div className=\"offset-md-1 col-md-6  text-secondary  mx-2 my-3\">\r\n                    <h4 className=\"text-secondary text-uppercase \">  product  update</h4>\r\n                    <hr />\r\n                    <br />\r\n                    \r\n                    {\r\n                        isProductLoading ? <Loader />: \r\n                        <>\r\n                            {\r\n                                productInput.images.length > 0 ? productInput.images.map((img,i) => (\r\n                                    <Badge count=\"X\" key={i} style={{ cursor: \"pointer\"}} onClick={() => handleImageRemove(img.public_id)} >\r\n                                        <Avatar size={80}  shape=\"square\" src={img.url} className=\"mx-3 mb-2\" />\r\n                                    </Badge>\r\n                                )) : null\r\n                            }\r\n                            <form onSubmit={submitHandler}>\r\n                                <FileUploadInput productInput={productInput} setProductInput={setProductInput} imageUploadLoading={imageUploadLoading} setImageUploadLoading={setImageUploadLoading} />\r\n                               \r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label text-uppercase\">title</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        value={title}\r\n                                        onChange={changeHandler}\r\n                                        className=\"form-control\"\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <label className=\"form-label text-uppercase\">description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"description\"\r\n                                            value={description}\r\n                                            onChange={changeHandler}\r\n                                            className=\"form-control\"\r\n                                            autoFocus\r\n                                        />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label text-uppercase\">price</label>\r\n                                    <input\r\n                                        type=\"Number\"\r\n                                        name=\"price\"\r\n                                        value={price}\r\n                                        onChange={changeHandler}\r\n                                        className=\"form-control\"\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label text-uppercase\">Shipping</label>\r\n                                    <select  value={productInput.shipping} name=\"shipping\" onChange={changeHandler} className=\"form-control\">\r\n                                        <option  value=\"Yes\">YES</option>\r\n                                        <option  value=\"No\">NO</option>\r\n                                    </select>\r\n                                </div>\r\n        \r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label text-uppercase\">quantity</label>\r\n                                    <input\r\n                                        type=\"Number\"\r\n                                        name=\"quantity\"\r\n                                        value={quantity}\r\n                                        onChange={changeHandler}\r\n                                        className=\"form-control\"\r\n                                        autoFocus\r\n                                    />\r\n                                </div>    \r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label text-uppercase\">brand</label>\r\n                                    <select name=\"brand\" value={productInput.brand} onChange={changeHandler} className=\"form-control\">\r\n                                        {\r\n                                            brands.map((col,i) =><option value={col} key={i}>\r\n                                                {col.toUpperCase()}\r\n                                            </option> )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label text-uppercase\">color</label>\r\n                                    <select name=\"color\" value={productInput.color}  onChange={changeHandler} className=\"form-control\">\r\n                                        {\r\n                                            colors.map((col,i) =><option value={col} key={i}>\r\n                                                {col.toUpperCase()}\r\n                                            </option> )\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                {\r\n                                    categoryLoading  && product? <Loader width={20} height={20} /> : <div className=\"form-group\">\r\n                                        <label className=\"form-label text-uppercase\">category</label>\r\n                                        <option>{ 'SELECT CATEGORY'}</option>\r\n                                        <select name=\"category\"   onChange={handleChangeForSub} className=\"form-control\" >\r\n                                            {\r\n                                                (\r\n                                                        categories.map((col,i) =><option value={col._id} key={i}>\r\n                                                            {col.name.toUpperCase()}\r\n                                                        </option>\r\n                                                    )\r\n                                                )  \r\n                                            }\r\n                                        </select>\r\n                                </div> \r\n                                }\r\n                                {\r\n                                    subLoading ? <Loader height={20} width={20} /> : visibleSub ? (\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label text-uppercase\">Sub category</label>\r\n                                            <Select name=\"sub\" defaultValue={ assignedSub} allowClear onChange={value => setProductInput({...productInput, sub: value})} mode=\"multiple\"  placeholder=\"PLEASE SUB-CATEGORY\" allowClear style={{ width: '100%' }}className=\"form-control\" multiple>\r\n                                                {\r\n                                                        sub.map((col,i) =><Option  value={col._id} key={i}>\r\n                                                        {col.name.toUpperCase()}\r\n                                                        </Option>\r\n                                                    )  \r\n                                                }\r\n                                            </Select>\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n                                \r\n                                <button className=\"btn btn-outline\" onClick={submitHandler} type=\"submit\">create</button>\r\n                            </form>\r\n                        </>\r\n                    }\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProductPage\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\nav\\AdminSidebar.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\asyncActionCreator.js",[],["477","478"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\product\\reducer.js",["479"],"import { actionType } from \"./actionType\";\r\n\r\nconst initialState = {\r\n    success: false,\r\n    isLoading: false,\r\n    errorMessage: null\r\n}\r\n\r\nexport const productReducer = (state = { isLoading: true, products: [], errorMessage: null }, action) => {\r\n    switch (action.type) {\r\n        case actionType.PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                products: [],\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: [],\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const newArrivalProductReducer = (state = { isLoading: true, products: [], errorMessage: null }, action) => {\r\n    switch (action.type) {\r\n        case actionType.NEW_ARRIVAL_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                products: [],\r\n                errorMessage: null\r\n            }\r\n        case actionType.NEW_ARRIVAL_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.NEW_ARRIVAL_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: [],\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const bestProductReducer = (state = { isLoading: true, products: [], errorMessage: null }, action) => {\r\n    switch (action.type) {\r\n        case actionType.BEST_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                products: [],\r\n                errorMessage: null\r\n            }\r\n        case actionType.BEST_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.BEST_PRODUCT_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: [],\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productBelongToSpecificReducer = (state = { isLoading: true, products: [], errorMessage: null }, action) => {\r\n    switch (action.type) {\r\n        case actionType.PRODUCT_BELONG_TO_SPECIFIC_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                products: [],\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_BELONG_TO_SPECIFIC_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_BELONG_TO_SPECIFIC_CATEGORY_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: [],\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const productBelongToSubSpecificReducer = (state = { isLoading: true, products: [], errorMessage: null }, action) => {\r\n    switch (action.type) {\r\n        case actionType.PRODUCT_BELONG_TO_SPECIFIC_SUB_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                products: [],\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_BELONG_TO_SPECIFIC_SUB_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_BELONG_TO_SPECIFIC_SUB_CATEGORY_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                products: [],\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDetailReducer = (state = { product: {}, isProductLoading: true, errorMessage: null}, action) => {\r\n    switch(action.type) {\r\n        case actionType.PRODUCT_DETAIL_REQUEST:\r\n            return {\r\n                ...state, \r\n                product: {},\r\n                isProductLoading: true,\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_DETAIL_SUCCESS:\r\n            return {\r\n                ...state, \r\n                product: action.payload,\r\n                isProductLoading: false,\r\n                errorMessage: null\r\n            }\r\n        case actionType.PRODUCT_DETAIL_FAILED:\r\n            return {\r\n                ...state, \r\n                product: {},\r\n                isProductLoading: false,\r\n                errorMessage: action.payload\r\n            }\r\n        case actionType.PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                product: {},\r\n                isProductLoading: false,\r\n                errorMessage: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const productCreateReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.SUB_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                success: false,\r\n                errorMessage: null\r\n            }\r\n        case actionType.SUB_CREATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: true,\r\n                errorMessage: null\r\n            }\r\n        case actionType.SUB_CREATE_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.SUB_UPDATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                success: false,\r\n                errorMessage: null\r\n            }\r\n        case actionType.SUB_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: true,\r\n                errorMessage: null\r\n            }\r\n        case actionType.SUB_UPDATE_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.SUB_DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                success: false,\r\n                errorMessage: null\r\n            }\r\n        case actionType.SUB_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: true,\r\n                errorMessage: null\r\n            }\r\n        case actionType.SUB_DELETE_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\sub\\SubList.js",[],["480","481"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\sub\\SubHome.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\store.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\asyncActionCreator.js",[],["482","483"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\reducer.js",[],["484","485"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\actionType.js",[],["486","487"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Rating.js",[],["488","489"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\shop\\ShopPage.js",["490"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\asyncActionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Star.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Route\\AdminRoute.js",[],["491","492"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\asyncActionCreator.js",[],["493","494"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\reducer.js",["495"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\nav\\SidebarNav.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\search\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\cart\\CartPage.js",["496"],"import React, { useEffect}   from 'react';\r\nimport ProductList from '../../components/product/ProductList';\r\nimport {  Link} from 'react-router-dom';\r\nimport {  useSelector , useDispatch} from 'react-redux';\r\nimport { addProductToCart , getUserCart} from '../../redux/cart/asyncCreator';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nconst CartPage = ({ history }) => {\r\n    \r\n    const cartReducer = useSelector(state => state.cartReducer);\r\n    const deleteCartReducer = useSelector(state => state.deleteCartReducer)\r\n    const userReducer = useSelector(state => state.userReducer);\r\n    const { products, isLoading, errorMessage }= cartReducer\r\n    const { currentUser } = userReducer;\r\n    const { success: deleteSuccess } = deleteCartReducer;\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    console.log(products)\r\n    useEffect(() => {\r\n        if(currentUser) { \r\n            dispatch(getUserCart(currentUser.authtoken))\r\n        }\r\n    },[dispatch, deleteSuccess, currentUser])\r\n\r\n    const createOrderToDb = () => {\r\n        dispatch(addProductToCart(currentUser.authtoken, products))\r\n        setTimeout(() => {\r\n            history.push('/checkout')\r\n        }, 500);\r\n    }\r\n    return isLoading ? <Loader width={50} height={50} /> :  errorMessage  || products.products.length === 0  ? \r\n            <div>\r\n                <Message text={errorMessage ? errorMessage: \"You have not added product into your cart.\" } > \r\n                {\"   \"}<Link to=\"/shop\" className=\"text-dark\">Click here to continue shopping</Link></Message>\r\n            </div>\r\n            : <div className=\"container-fluid \">\r\n                    <div className=\"row  d-flex justify-content-center\">\r\n                        <h4 className=\"text-uppercase display-4 text-secondary\">Cart Page</h4>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row d-flex justify-content-center\">\r\n                                <h4 className=\"display-5 text-secondary text-uppercase\">Product details</h4>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"row  d-flex justify-content-center\">\r\n                                <p className=\"display-5 px-2 text-uppercase text-secondary font-weight-bold\">\r\n                                        Total product :\r\n                                    <span>{' '}{products.products.length}</span></p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-bordered\">\r\n                                <thead className=\"table-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">Image</th>\r\n                                        <th scope=\"col\">Title</th>\r\n                                        <th scope=\"col\">Price</th>\r\n                                        <th scope=\"col\">Brand</th>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Color</th>\r\n                                        <th scope=\"col\">Shipping</th>\r\n                                        <th scope=\"col\">Remove</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n                                    products.products.map((p, i) => <ProductList key={i} product={p} />)\r\n                                }\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"row d-flex justify-content-center\">\r\n                                <h4 className=\"display-5 text-secondary text-uppercase\">Order Summary</h4>\r\n                            </div>\r\n                            <hr />\r\n\r\n                            <div className=\"row  d-flex justify-content-center\">\r\n                                <p className=\"display-5 px-2 text-uppercase text-secondary font-weight-bold\">\r\n                                        Product title * qty = price\r\n                                </p>\r\n                            </div>\r\n                            <hr />\r\n                            {\r\n                                products.products.map((p , i) => <div className=\"row\" key={i}>\r\n                                    <p className=\"col-4 text-uppercase\">{p.product.slug}</p>\r\n                                    <p className=\"col-1\">*</p>\r\n                                    <p className=\"col-2\">{p.count}</p>\r\n                                    <p className=\"col-1\">=</p>\r\n                                    <p className=\"col-2\">{p.price * p.count}</p>\r\n                                </div>)\r\n                            }\r\n                            < hr />\r\n                            <div className=\"row\">\r\n                                <p className=\"col-8 text-uppercase\">Total price</p>\r\n                                <p className=\"col-4\">Rs. {products.cartTotal}</p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <button className=\"btn btn-outline-success\" onClick={() => history.push('/checkout')}>Proceed to checkout</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n}\r\n\r\nexport default CartPage;\r\n\r\n\r\n                                \r\n\r\n//                 <div className=\"col-md-4 \">\r\n//                             <h4 className=\"display-4  text-secondary text-uppercase \">Order Summary</h4>\r\n//                             <h5 className=\"text-uppercase\">Products </h5>\r\n//                             {\r\n//                                 products.products.map((c,i) => {\r\n//                                     return <div key={i}>\r\n//                                             <p className=\"text-uppercase \">{c.title}  *  {c.count} = {c.price} </p>\r\n//                                         </div>\r\n//                                 })\r\n//                             }\r\n//                             <hr />\r\n//                             <h5 className=\"text-secondary text-uppercase\">Total: <span className=\"float-right\">Rs.{products.totalPrice}</span></h5>\r\n//                             <hr/>\r\n//                             <br />\r\n//                             {\r\n//                                 currentUser ? <div className=\"text-uppercase float-right btn btn-outline-success p-2 rounded block \" \r\n//                                 onClick={createOrderToDb}> proceed to checkout</div>\r\n//                                     : <Link  className=\"btn btn-warning-outline rounded p-2\" to={{ pathname:\"/login\", state:{from : \"/cart\"}}}>\r\n//                                     You have to login for checkout\r\n//                                 </Link>\r\n//                             }\r\n//                         </div>\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\UserRedirect.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\product\\ProductList.js",["497","498"],"import React from 'react';\r\nimport {Image } from 'antd';\r\nimport { DeleteOutlined, CheckCircleOutlined, CloseCircleOutlined  } from '@ant-design/icons';\r\nimport { useDispatch ,  useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport DefaultImage from '../../images/laptop.png';\r\nimport { deleteUserCart, addProductToCart } from '../../redux/cart/asyncCreator';\r\nconst ProductList = ({ product }) => {\r\n    const colors = ['Black','White','Red','Silver', 'Blue', 'Orange']\r\n    const dispatch = useDispatch();\r\n    const userReducer = useSelector(state => state.userReducer)\r\n    const { currentUser } = userReducer\r\n\r\n    const handleQuantity = (e) => {\r\n        let cart = []\r\n        let qty = e.target.value;\r\n        if(qty > product.available) {\r\n            toast.error(`Max quantity is ${product.quantity}`)\r\n        }\r\n        if(typeof window != 'undefined') {\r\n            if(localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart')); \r\n            }\r\n\r\n            console.log(qty)\r\n            console.log(cart[0].count)\r\n            cart.map((p,i) => {\r\n                \r\n                if(p._id === product.product._id) {\r\n                    cart[i].count = qty\r\n                }\r\n            })\r\n\r\n            localStorage.setItem('cart',JSON.stringify(cart))\r\n            // dispatch(addToCartReset());\r\n            dispatch(addProductToCart(currentUser.authtoken,cart));\r\n\r\n        }\r\n    }\r\n\r\n    const handleChangeColor = (e) => {\r\n        let cart = [];\r\n        if(typeof window !== 'undefined') {\r\n            if(localStorage.getItem('cart')) {\r\n                cart =  JSON.parse(localStorage.getItem('cart'));\r\n            } \r\n\r\n            cart.map((p,i) =>  {\r\n                 if(product.product._id === p._id) {\r\n                      cart[i].color = e.target.value\r\n                }   \r\n            })\r\n\r\n            localStorage.setItem('cart',JSON.stringify(cart));\r\n            dispatch(addProductToCart(currentUser.authtoken,cart));        \r\n            \r\n        }\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        let cart = [];\r\n        if(typeof window !== 'undefined') {\r\n            if(localStorage.getItem('cart')) {\r\n                cart =  JSON.parse(localStorage.getItem('cart'));\r\n            } \r\n            if(cart.length > 0) {\r\n                if(cart.length === 1 ){\r\n                    localStorage.setItem('cart', JSON.stringify([]))\r\n                    dispatch(deleteUserCart(currentUser.authtoken)); \r\n                } else {\r\n                        let a = cart.filter(p => {\r\n                            console.log(product.product._id, p._id)\r\n                        return product.product._id !== p._id\r\n                        })  \r\n\r\n                        localStorage.setItem('cart',JSON.stringify(a));\r\n                        dispatch(addProductToCart(currentUser.authtoken,a))  \r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tbody className=\"table-striped\">\r\n            <tr>\r\n                <td>\r\n                    <Image width={100} height={80}  src={product.img ? product.img : product.images ? product.images[0].url : <DefaultImage /> } alt={product.title} className=\"img img-fluid\"/>\r\n                </td>\r\n                <td>{product.product.slug || product.title}</td>\r\n                <td style={{paddingTop: '35px'}}>{product.price}</td>\r\n                <td style={{paddingTop: '35px'}}>{product.product.brand || product.brand}</td>\r\n                            \r\n                <td>\r\n                    <input type=\"Number\" className=\"form-control text-center\" value={  product && product.count} onChange={handleQuantity} style={{paddingTop: '13px'}}/>\r\n                </td>\r\n                <td>\r\n                    <select  className=\"form-control border-none\" name=\"color\" onChange={handleChangeColor}  style={{margin: '2px'}}>\r\n                        <option>{product.color}</option>\r\n                        {\r\n                            colors.filter(f => f.color !== product.color).map((col,i) => <option key={i}>{col}</option>)\r\n                        }\r\n                    </select>\r\n                </td>\r\n                <td>{product.product.shipping === 'Yes' ? <CheckCircleOutlined  className=\"text-success\" style={{margin: '30px' }}/> \r\n                : <CloseCircleOutlined className=\"text-center text-danger\" style={{margin: '30px' }}/>}</td>\r\n                <td><DeleteOutlined className=\"text-danger\"  style={{marginTop: '30px', marginLeft: '25px' }} onClick={handleRemove}/></td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default ProductList;\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\user\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\sub\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\drawer\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\drawer\\Drawer.js",["499","500"],"import React, { useEffect } from 'react';\r\nimport { Link, useHistory  } from 'react-router-dom';\r\nimport { Drawer, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setVisible } from '../../redux/drawer/actionType'\r\nimport { getUserCart } from '../../redux/cart/asyncCreator';\r\nimport Loader from '../Loader';\r\n\r\nconst Drawers = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    const drawerReducer = useSelector(state => state.drawerReducer)\r\n    const cartReducer = useSelector(state => state.cartReducer)\r\n    const userReducer = useSelector(state => state.userReducer)\r\n    const { products , isLoading, errorMessage  } = cartReducer\r\n    const addToCartReducer = useSelector(state => state.addToCartReducer)\r\n    const { success } = addToCartReducer;\r\n    const { visible } = drawerReducer;\r\n    const { currentUser } = userReducer\r\n    console.log(products)\r\n    \r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            dispatch(getUserCart(currentUser.authtoken))\r\n        }\r\n    },[dispatch, success, ])\r\n\r\n    return  isLoading ? <Loader width={0} height={0}  /> :   products.products ? <Drawer \r\n            className=\"text-center text-secondary text-uppercase\" \r\n            visible={visible} \r\n            title={`Cart ${products.products.length}`} \r\n            placement=\"right\" \r\n            onClose={() => dispatch(setVisible())}>\r\n            {\r\n                products.products.map((p , i) => <div key={i} >\r\n                        <div className=\"row\">\r\n                            <img className=\"col\"  src={ p.img && p.img} alt={p.slug} style={{ width: '100%', height: 150, objectFit: 'fill'}} />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Link  onClick={() => {history.push(`/product/${p.product.slug}`); dispatch(setVisible())}}\r\n                             className=\"col text-center mb-3 p-2 text-uppercase mx-3 text-secondary bg-light\">\r\n                                {p.product.slug}\r\n                            </Link>\r\n                        </div>\r\n                </div>) \r\n            }\r\n            <div className=\"row\">\r\n                <Button onClick={() => {dispatch(setVisible());history.push('/cart')}} className=\"col btn btn-outline-success  m-3 font-weight-bold text-uppercase\">Go to cart detail</Button> \r\n            </div>\r\n</Drawer> : null\r\n}\r\n\r\nexport default Drawers\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\drawer\\actionType.js",[],["501","502"],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Route\\UserRoute.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\checkout\\CheckOutPage.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Message.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\cart\\asyncCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\reducer.js",["503","504"],"import { actionType } from './actionType';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    success: false,\r\n    errorMessage: null\r\n}\r\n\r\nexport const getCouponReducer = (state = { coupons: [], isLoading: false, errorMessage: null}, action) => {\r\n    switch(action.type) {\r\n        case actionType.GET_COUPON_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                coupons: [],\r\n                errorMessage: null\r\n            }\r\n        \r\n        case actionType.GET_COUPON_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                coupons: action.payload,\r\n                errorMessage: null\r\n            }\r\n        \r\n        case actionType.GET_COUPON_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                coupons: [],\r\n                errorMessage: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const createCouponReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.CREATE_COUPON_REQUEST:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n                success: false,\r\n                errorMessage: null\r\n            }\r\n        \r\n        case actionType.CREATE_COUPON_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                success: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.CREATE_COUPON_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteCouponReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.DELETE_COUPON_FAILED:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n                success: false,\r\n                errorMessage: null\r\n            }\r\n        \r\n        case actionType.DELETE_COUPON_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                success: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.DELETE_COUPON_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const applyCouponReducer = (state = { isLoading: false, success: null, errorMessage: null}, action) => {\r\n    switch(action.type) {\r\n        case actionType.APPLY_COUPON_REQUEST:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n                success: null,\r\n                errorMessage: null\r\n            }\r\n        \r\n        case actionType.APPLY_COUPON_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                success: action.payload,\r\n                errorMessage: null\r\n            }\r\n        case actionType.APPLY_COUPON_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                success: null,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\asyncActionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\coupon\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\coupon\\CouponPage.js",["505","506"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport { createCoupon, deleteCoupon, allCoupon } from '../../../redux/coupon/asyncActionCreator';\r\nimport AdminSidebarNav from '../../../components/nav/AdminSidebar';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport Loader from '../../../components/Loader'\r\nimport moment from 'moment';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst CouponPage = () => {\r\n    const [ name, setName ] = useState('');\r\n    const [ expDate, setExpDate ] = useState(new Date());\r\n    const [ discount, setDiscount ]= useState('');\r\n    \r\n    const getCouponReducer = useSelector(state => state.getCouponReducer)\r\n    const createCouponReducer = useSelector(state => state.createCouponReducer)\r\n    const deleteCouponReducer = useSelector(state => state.deleteCouponReducer)\r\n    const userReducer = useSelector(state => state.userReducer);\r\n\r\n    const { currentUser } = userReducer;\r\n    const { success: createSuccess, isLoading: createLoading, } = createCouponReducer;\r\n    const { success: deleteSuccess , isLoading: deleteLoading} = deleteCouponReducer;\r\n    const { isLoading, coupons  } = getCouponReducer;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        if(currentUser) {\r\n            dispatch(allCoupon(currentUser.authtoken));\r\n        }\r\n    },[dispatch, currentUser, deleteSuccess, createSuccess])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createCoupon(currentUser.authtoken, { name, discounts: discount, expiry: expDate}));\r\n        setDiscount('');\r\n        setName('');\r\n        setExpDate(new Date());    \r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteCoupon(currentUser.authtoken, id))\r\n    }\r\n    return (  \r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                        <AdminSidebarNav />\r\n                </div>\r\n                \r\n                <div className=\"offset-md-1 col-md-6  text-secondary  mx-2 my-3\">\r\n                    <h4 className=\"text-secondary text-uppercase \"> coupon</h4>\r\n                    <hr />\r\n                    <br />\r\n                    <form  onSubmit={submitHandler}>\r\n                        <div className=\"form-group\">    \r\n                            <label className=\"form-label text-uppercase text-muted\">Name</label>\r\n                            <input type=\"text\" \r\n                            className=\"form-control text-uppercase \" \r\n                            value={name} \r\n                            placeholder=\"coupon name\"\r\n                            onChange={e => setName(e.target.value)} \r\n                            required\r\n                            autoFocus/>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">    \r\n                            <label className=\"form-label text-uppercase text-muted\">Discount</label>\r\n                            <input type=\"text\" \r\n                            className=\"form-control text-uppercase\" \r\n                            value={discount} \r\n                            placeholder=\"discount\"\r\n                            onChange={e => setDiscount(e.target.value)} \r\n                            required/>\r\n                        </div>    \r\n                        \r\n                        <div className=\"form-group\">    \r\n                            <label className=\"form-label text-uppercase text-muted\">Expiry date</label>\r\n                            <br />\r\n                            <DatePicker  \r\n                            selected={expDate}\r\n                            onChange={date => setExpDate(date)} \r\n                            required\r\n                            className=\"form-control\"\r\n                            />\r\n                        </div>\r\n\r\n                        <button onClick={submitHandler} className=\"btn btn-outline-primary\">create</button>\r\n                    </form>\r\n                    {\r\n                        isLoading ? <Loader width={40} height={40} /> : coupons.length > 0  ? <>\r\n                            <div className=\" text-uppercase font-weight-bold  py-2 row b\">\r\n                                <p className=\"col-4\">Coupon name</p>\r\n                                <p className=\"col-4\">Expiry Date</p>\r\n                                <p className=\"col-3\">Discount</p>\r\n                            </div>\r\n                            <hr />\r\n\r\n                    {       \r\n                        coupons.map(c =>  <div className=\"text-uppercase  pb-2 row \" key={c._id}>\r\n                                    <p className=\"col-4\">{c.name}</p>\r\n                                    <p className=\"col-4 float-right\">{moment(c.expiry).format('MMM Do YYYY, h:mm:ss a')}</p>\r\n                                    <p className=\"col-3 float-right\">{c.discounts}</p>\r\n                                    <DeleteOutlined className=\"col-1 text-danger\" onClick={() => deleteHandler(c._id)} />\r\n                                </div>\r\n                                )\r\n                    }\r\n                        </>\r\n                            : <h4 className=\"text-uppercase text-secondary\">No coupon found</h4> \r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CouponPage\r\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\payment\\Payment.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\StripeCheckout.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\payment\\payment.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\asyncActionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\order\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\components\\Invoice.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\wishlist\\actionCreator.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\wishlist\\actionType.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\redux\\wishlist\\reducer.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\React\\Flipcart\\frontend\\src\\pages\\admin\\Password.js",[],{"ruleId":"507","severity":1,"message":"508","line":33,"column":8,"nodeType":"509","endLine":33,"endColumn":27,"suggestions":"510"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","replacedBy":"514"},{"ruleId":"511","replacedBy":"515"},{"ruleId":"513","replacedBy":"516"},{"ruleId":"517","severity":1,"message":"518","line":1,"column":28,"nodeType":"519","messageId":"520","endLine":1,"endColumn":37},{"ruleId":"521","severity":1,"message":"522","line":49,"column":21,"nodeType":"523","endLine":49,"endColumn":51},{"ruleId":"511","replacedBy":"524"},{"ruleId":"513","replacedBy":"525"},{"ruleId":"517","severity":1,"message":"518","line":1,"column":26,"nodeType":"519","messageId":"520","endLine":1,"endColumn":35},{"ruleId":"521","severity":1,"message":"522","line":87,"column":21,"nodeType":"523","endLine":87,"endColumn":93},{"ruleId":"521","severity":1,"message":"522","line":93,"column":25,"nodeType":"523","endLine":93,"endColumn":55},{"ruleId":"511","replacedBy":"526"},{"ruleId":"513","replacedBy":"527"},{"ruleId":"511","replacedBy":"528"},{"ruleId":"513","replacedBy":"529"},{"ruleId":"507","severity":1,"message":"530","line":34,"column":20,"nodeType":"531","endLine":34,"endColumn":60},{"ruleId":"511","replacedBy":"532"},{"ruleId":"513","replacedBy":"533"},{"ruleId":"511","replacedBy":"534"},{"ruleId":"513","replacedBy":"535"},{"ruleId":"511","replacedBy":"536"},{"ruleId":"513","replacedBy":"537"},{"ruleId":"511","replacedBy":"538"},{"ruleId":"513","replacedBy":"539"},{"ruleId":"511","replacedBy":"540"},{"ruleId":"513","replacedBy":"541"},{"ruleId":"517","severity":1,"message":"542","line":19,"column":13,"nodeType":"519","messageId":"520","endLine":19,"endColumn":16},{"ruleId":"517","severity":1,"message":"543","line":19,"column":18,"nodeType":"519","messageId":"520","endLine":19,"endColumn":27},{"ruleId":"511","replacedBy":"544"},{"ruleId":"513","replacedBy":"545"},{"ruleId":"517","severity":1,"message":"546","line":1,"column":28,"nodeType":"519","messageId":"520","endLine":1,"endColumn":36},{"ruleId":"511","replacedBy":"547"},{"ruleId":"513","replacedBy":"548"},{"ruleId":"517","severity":1,"message":"549","line":8,"column":20,"nodeType":"519","messageId":"520","endLine":8,"endColumn":28},{"ruleId":"517","severity":1,"message":"550","line":35,"column":27,"nodeType":"519","messageId":"520","endLine":35,"endColumn":36},{"ruleId":"507","severity":1,"message":"551","line":16,"column":7,"nodeType":"509","endLine":16,"endColumn":17,"suggestions":"552"},{"ruleId":"511","replacedBy":"553"},{"ruleId":"513","replacedBy":"554"},{"ruleId":"511","replacedBy":"555"},{"ruleId":"513","replacedBy":"556"},{"ruleId":"517","severity":1,"message":"557","line":9,"column":8,"nodeType":"519","messageId":"520","endLine":9,"endColumn":15},{"ruleId":"517","severity":1,"message":"558","line":47,"column":55,"nodeType":"519","messageId":"520","endLine":47,"endColumn":75},{"ruleId":"517","severity":1,"message":"559","line":48,"column":50,"nodeType":"519","messageId":"520","endLine":48,"endColumn":65},{"ruleId":"507","severity":1,"message":"560","line":81,"column":27,"nodeType":"531","endLine":81,"endColumn":70},{"ruleId":"561","severity":1,"message":"562","line":230,"column":221,"nodeType":"563","endLine":230,"endColumn":231},{"ruleId":"511","replacedBy":"564"},{"ruleId":"513","replacedBy":"565"},{"ruleId":"566","severity":1,"message":"567","line":53,"column":9,"nodeType":"568","messageId":"569","endLine":59,"endColumn":14},{"ruleId":"511","replacedBy":"570"},{"ruleId":"513","replacedBy":"571"},{"ruleId":"511","replacedBy":"572"},{"ruleId":"513","replacedBy":"573"},{"ruleId":"511","replacedBy":"574"},{"ruleId":"513","replacedBy":"575"},{"ruleId":"511","replacedBy":"576"},{"ruleId":"513","replacedBy":"577"},{"ruleId":"511","replacedBy":"578"},{"ruleId":"513","replacedBy":"579"},{"ruleId":"507","severity":1,"message":"580","line":107,"column":7,"nodeType":"509","endLine":107,"endColumn":36,"suggestions":"581"},{"ruleId":"511","replacedBy":"582"},{"ruleId":"513","replacedBy":"583"},{"ruleId":"511","replacedBy":"584"},{"ruleId":"513","replacedBy":"585"},{"ruleId":"517","severity":1,"message":"586","line":3,"column":7,"nodeType":"519","messageId":"520","endLine":3,"endColumn":19},{"ruleId":"517","severity":1,"message":"587","line":27,"column":11,"nodeType":"519","messageId":"520","endLine":27,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":27,"column":28,"nodeType":"590","messageId":"591","endLine":27,"endColumn":30},{"ruleId":"588","severity":1,"message":"589","line":48,"column":28,"nodeType":"590","messageId":"591","endLine":48,"endColumn":30},{"ruleId":"517","severity":1,"message":"592","line":15,"column":35,"nodeType":"519","messageId":"520","endLine":15,"endColumn":47},{"ruleId":"507","severity":1,"message":"593","line":26,"column":7,"nodeType":"509","endLine":26,"endColumn":28,"suggestions":"594"},{"ruleId":"511","replacedBy":"595"},{"ruleId":"513","replacedBy":"596"},{"ruleId":"566","severity":1,"message":"567","line":27,"column":9,"nodeType":"568","messageId":"569","endLine":33,"endColumn":14},{"ruleId":"566","severity":1,"message":"567","line":85,"column":9,"nodeType":"568","messageId":"569","endLine":91,"endColumn":14},{"ruleId":"517","severity":1,"message":"597","line":22,"column":48,"nodeType":"519","messageId":"520","endLine":22,"endColumn":61},{"ruleId":"517","severity":1,"message":"598","line":23,"column":49,"nodeType":"519","messageId":"520","endLine":23,"endColumn":62},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product.ratings'. Either include it or remove the dependency array.","ArrayExpression",["599"],"no-native-reassign",["600"],"no-negated-in-lhs",["601"],["600"],["601"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["600"],["601"],["600"],["601"],["600"],["601"],"Assignments to the 'cart' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["600"],["601"],["600"],["601"],["600"],["601"],["600"],["601"],["600"],["601"],"'sub' is assigned a value but never used.","'isLoading' is assigned a value but never used.",["600"],["601"],"'useState' is defined but never used.",["600"],["601"],"'setEmail' is assigned a value but never used.","'userToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["602"],["600"],["601"],["600"],["601"],"'Message' is defined but never used.","'categoryErrorMessage' is assigned a value but never used.","'subErrorMessage' is assigned a value but never used.","Assignments to the 'assignedSub' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["600"],["601"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["600"],["601"],["600"],["601"],["600"],["601"],["600"],["601"],["600"],["601"],"React Hook useEffect has a missing dependency: 'star'. Either include it or remove the dependency array.",["603"],["600"],["601"],["600"],["601"],"'initialState' is assigned a value but never used.","'createOrderToDb' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'errorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["604"],["600"],["601"],"'createLoading' is assigned a value but never used.","'deleteLoading' is assigned a value but never used.",{"desc":"605","fix":"606"},"no-global-assign","no-unsafe-negation",{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},"Update the dependencies array to be: [currentUser, product.ratings, star]",{"range":"613","text":"614"},"Update the dependencies array to be: [dispatch, slug]",{"range":"615","text":"616"},"Update the dependencies array to be: [categoryId, star, starValue, subId]",{"range":"617","text":"618"},"Update the dependencies array to be: [currentUser, dispatch, success]",{"range":"619","text":"620"},[1493,1512],"[currentUser, product.ratings, star]",[720,730],"[dispatch, slug]",[3989,4018],"[categoryId, star, starValue, subId]",[1069,1090],"[currentUser, dispatch, success]"]